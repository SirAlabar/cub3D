==94427== Memcheck, a memory error detector
==94427== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==94427== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==94427== Command: ./cub3D ./maps/valid/test.cub
==94427== 
==94427== Conditional jump or move depends on uninitialised value(s)
==94427==    at 0x4082F4: check_enemy_status (enemy_damage.c:19)
==94427==    by 0x408258: enemy_can_attack (enemy_damage.c:38)
==94427==    by 0x4083BC: enemy_attack_player (enemy_damage.c:61)
==94427==    by 0x408220: process_enemy_attacks (enemy_damage2.c:23)
==94427==    by 0x403289: engine_render_frame (engine_render.c:38)
==94427==    by 0x40F57C: mlx_loop (in /home/marsoare/CommonCore/cub3D/cub3D)
==94427==    by 0x402839: main (main.c:45)
==94427== 
==94427== Conditional jump or move depends on uninitialised value(s)
==94427==    at 0x408314: check_enemy_status (enemy_damage.c:21)
==94427==    by 0x408258: enemy_can_attack (enemy_damage.c:38)
==94427==    by 0x4083BC: enemy_attack_player (enemy_damage.c:61)
==94427==    by 0x408220: process_enemy_attacks (enemy_damage2.c:23)
==94427==    by 0x403289: engine_render_frame (engine_render.c:38)
==94427==    by 0x40F57C: mlx_loop (in /home/marsoare/CommonCore/cub3D/cub3D)
==94427==    by 0x402839: main (main.c:45)
==94427== 
==94427== Conditional jump or move depends on uninitialised value(s)
==94427==    at 0x409D24: draw_lifebar_hud (health_bar.c:52)
==94427==    by 0x409E20: draw_health_bar (health_bar.c:120)
==94427==    by 0x40333B: engine_render_frame (engine_render.c:52)
==94427==    by 0x40F57C: mlx_loop (in /home/marsoare/CommonCore/cub3D/cub3D)
==94427==    by 0x402839: main (main.c:45)
==94427== 
==94427== 
==94427== HEAP SUMMARY:
==94427==     in use at exit: 2,720 bytes in 30 blocks
==94427==   total heap usage: 5,531 allocs, 5,501 frees, 4,473,792 bytes allocated
==94427== 
==94427== LEAK SUMMARY:
==94427==    definitely lost: 480 bytes in 10 blocks
==94427==    indirectly lost: 2,240 bytes in 20 blocks
==94427==      possibly lost: 0 bytes in 0 blocks
==94427==    still reachable: 0 bytes in 0 blocks
==94427==         suppressed: 0 bytes in 0 blocks
==94427== Rerun with --leak-check=full to see details of leaked memory
==94427== 
==94427== Use --track-origins=yes to see where uninitialised values come from
==94427== For lists of detected and suppressed errors, rerun with: -s
==94427== ERROR SUMMARY: 13 errors from 3 contexts (suppressed: 1 from 1)
